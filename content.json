[{"title":"java 算法效率","date":"2017-02-21T16:05:39.000Z","path":"2017/02/22/javahigh/","text":"ps:今天真的是被git弄的稀里糊涂了一天，弄到现在还在实验室，我都怀疑自己的认真劲头了😂。 以前觉得自己没有做技术的耐性，无法静静的呆在自己的电脑前。那个时候坐在电脑前都会流眼泪，那个时候就对自己说：是的我不合适做技术，然而读研的路上感觉自己的性格改变了很多，不敢说非常踏实，但是目前来说，静静地看着技术文档和书籍，常常能获得快感，就像现在已经过了12点，我在“奋笔疾书”。解决bug的时候有那么一丝丝成就感，不知道是不是自己越来越适合做技术了，感觉自己每天过的越来越充实和快乐，只要今天的自己比昨天的自己更强大。","tags":[{"name":"小章鱼","slug":"小章鱼","permalink":"http://yoursite.com/tags/小章鱼/"},{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"},{"name":"算法","slug":"算法","permalink":"http://yoursite.com/tags/算法/"}]},{"title":"数据库学习笔记二","date":"2017-02-19T14:45:29.000Z","path":"2017/02/19/mysql2/","text":"Mysql 视图概念： 视图可以包含表中的所有列，或者仅包含选定的列。视图可以创建自一个或者多个表，这取决于创建该视图的 SQL 语句的写法。视图，是一种虚拟的表，数据库只存放了视图的定义，并没有存放视图中的数据。优点：用户可以不用看到整个数据库表中的数据，而只关心对自己有用的数据即可。 作用： 简单性：所见即所需 安全性：授权 逻辑数据独立性：程序与数据库独立 视图与查询的区别： 视图和查询都是用由sql语句组成,这是他们相同的地方,但是视图和查询有着本质区别：它们的区别在于： 存储上的区别：视图存储为数据库设计的一部分,而查询则不是 更新限制的要求不一样要注意：因为视图来自于表,所以通过视图可以间接对表进行更新,我们也可以通过update语句对表进行更新,但是对视图和查询更新限制是不同的, 排序结果：通过sql语句,可以对一个表进行排序,而视图则不行。 Mysql 存储过程存储过程和存储函数是一些被用户定义的SQL语句集合，经编译后存储在数据库。用户通过指定存储过程的名字并给出参数（如果该存储过程带有参数）来执行它。其具有执行速度快，提高系统性能，确保数据库安全等诸多优点。 优点： 存储过程允许标准组件式编程 存储过程能够实现较快的执行速度 存储过程能够减少网络流量 存储过程可被作为一种安全机制来充分利用 参考书籍和链接《Mysql快速入门》博客一博客二","tags":[{"name":"小章鱼","slug":"小章鱼","permalink":"http://yoursite.com/tags/小章鱼/"},{"name":"数据库","slug":"数据库","permalink":"http://yoursite.com/tags/数据库/"},{"name":"学习笔记","slug":"学习笔记","permalink":"http://yoursite.com/tags/学习笔记/"}]},{"title":"数据库学习笔记一","date":"2017-02-19T14:45:29.000Z","path":"2017/02/19/transction/","text":"连接查询连接是把不同表的记录连到一起的最普遍的方法。 内连接：最普遍的连接类型，而且是最匀称的，因为它们要求构成连接的每一个部分的每个表匹配，不匹配的行将被排除。 外连接：使用outer join关键字将两个表连接起来。外连接生成的结果集不仅包括符合链接条件的行数据，而且还包括左表（左外连接）、右表（右边连接时的表）或两边链接表（全外连接时的表）中所有的数据行。 合并查询合并查询结果是将多个select语句的查询结果合并在一起。因为某种情况下，需要将几个select语句查询出来的结果合并起来显示。合并查询结果使用union和union all关键字。union关键字是将所有的查询结果合并在一起，然后去除相同记录；而union all关键字则只是简单地将结果合并在一起。 索引我们常见的数据库系统，其索引使用的数据结构多是B-Tree或者B+Tree。例如，MsSql使用的是B+Tree，Oracle及Sysbase使用的是B-Tree。所以在最开始，简单地介绍一下B-Tree。B-Tree 概念：索引是对数据库表中一个或多个列的值进行排序的结构。优点：在查询过程中使用索引，会提高数据库查询效率，应用索引来查询数据库中的内容，可以减少查询的次数，从而到达查询优化目的。缺点：创建索引和维护需要耗费时间，并且该耗费时间与数据量的大小成正比；另外，索引需要占用物理空间，给数据的维护造成很多麻烦。 索引分类 普通索引：不应用任何约束的索引，该索引可以在任何数据类型中创建。 唯一索引：使用UNIQUE参数可以设置唯一索引。该索引值必须唯一。主键是一种特殊的唯一索引。 全文索引：全文索引智能创建在CHAR、VARCHAR或者TEXT类型的字段上。查询数据量较大的字符串类型的字段时，使用全文索引可以提高查询速度。 单列索引：单列索引只对应一个字段的索引。 多列索引：在表的多个字段上创建一个索引。 事务处理 概念和技术事务处理系统的基本抽象：现实的状态通过一个称为数据库的抽象表示，现实状态的转变通过执行一个称为事务的执行过程来反映，他改变数据库的状态。P1 这里在介绍下事务的概念以及事务的ACID特性数据库事务（简称：事务）是数据库管理系统执行过程中的一个逻辑单位，由一个有限的数据库操作序列构成。ACID 原子性（Atomicity）：事务作为一个整体被执行，包含在其中的对数据库的操作要么全部被执行，要么都不执行。 一致性（Consistency）：事务应确保数据库的状态从一个一致状态转变为另一个一致状态。一致状态的含义是数据库中的数据应满足完整性约束。 隔离性（Isolation）：多个事务并发执行时，一个事务的执行不应影响其他事务的执行。 持久性（Durability）：已被提交的事务对数据库的修改应该永久保存在数据库中。 参考书籍和链接《事务处理 概念和技术》《Mysql快速入门》详解SQL Server连接（内连接、外连接、交叉连接）索引","tags":[{"name":"小章鱼","slug":"小章鱼","permalink":"http://yoursite.com/tags/小章鱼/"},{"name":"数据库","slug":"数据库","permalink":"http://yoursite.com/tags/数据库/"},{"name":"学习笔记","slug":"学习笔记","permalink":"http://yoursite.com/tags/学习笔记/"},{"name":"事务处理","slug":"事务处理","permalink":"http://yoursite.com/tags/事务处理/"}]},{"title":"学习资料记录","date":"2017-02-17T06:31:59.000Z","path":"2017/02/17/reading/","text":"这里记录下每个阶段的学习资料 ##java 多线程和并发java 并发性和多线程并发编程网JDK8JDK6 mysql 忘记 root 密码 数据库《Mysql快速入门》 纸质书籍《事务处理的技术和概念》 这个学习的文档使电子书籍","tags":[{"name":"小章鱼","slug":"小章鱼","permalink":"http://yoursite.com/tags/小章鱼/"},{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"},{"name":"reading","slug":"reading","permalink":"http://yoursite.com/tags/reading/"}]},{"title":"泰国游记第一天","date":"2017-02-07T03:11:48.000Z","path":"2017/02/07/thailand01/","text":"主题：出发 + 卧佛寺故事： 机场偶遇泰国留学生 欧洲老夫妻酒吧dancing","tags":[{"name":"小章鱼","slug":"小章鱼","permalink":"http://yoursite.com/tags/小章鱼/"},{"name":"travel","slug":"travel","permalink":"http://yoursite.com/tags/travel/"},{"name":"thailand","slug":"thailand","permalink":"http://yoursite.com/tags/thailand/"}]},{"title":"泰国游记序言","date":"2017-02-04T15:44:55.000Z","path":"2017/02/04/thailand00/","text":"这是一次真正意义上的说走就走的旅行，当我看到我同门师弟（其实也不算师弟，我们同届，只是他晚来几天^-^）在买飞机票的时候我就好奇的问了句“去哪里玩吗？”同时回了句“我也去可以？”。就这样的两个问句开始我2017年的第一次旅游，同时也是我的第一次出国游，同时也完成了我许许多多的第一次。最最重要的使这是我第一次写游记，本来没这种兴趣的，但是不知道怎么就在手机上写了一些简单的记录，回来了也就想着干脆写游记吧。毕竟这一路上自己也遇到了一些坑，就当给别人一些参考也好，而且一边写着一边回忆起旅游的乐事，真的很有意思，有的时候都会笑出来声来。 首先简单介绍一下一起出行的6个人。 从前往后介绍：一排左一是我们的财政大臣，所有公费都放在这个boy手上，办事沉稳一排右一是我们的欢乐使者，气氛莫名尴尬的时候只需要他发声立马暖场二排左一和右一是太阳伞CP，只要有太阳自动组合三排左一和右一是绯闻CP，学校到泰国到学校都是绯闻CP那么问题来了，那个才是真的我 再简单介绍一下我们的行程：旅游方式：自助游+两个一日团行程：为期8天，旅游城市：清迈，普吉和曼谷住宿：名宿和酒店出行方式：飞机，出租，包车，船和嘟嘟车（凸凸车）电话：happy卡花费：旅游+购物 7000+RMB","tags":[{"name":"小章鱼","slug":"小章鱼","permalink":"http://yoursite.com/tags/小章鱼/"},{"name":"travel","slug":"travel","permalink":"http://yoursite.com/tags/travel/"},{"name":"thailand","slug":"thailand","permalink":"http://yoursite.com/tags/thailand/"}]},{"title":"小章鱼2017年计划","date":"2017-01-14T15:53:55.000Z","path":"2017/01/14/2017plan/","text":"前言 2016年已经过去了。 2017年计划非技术文艺片 至少观看两部话剧(周五晚上)，话剧表演艺术以及观众对的素质，是我深深的爱上了话剧这种艺术形式 至少观看六部电影 至少看十本课外书，生活不止眼前的苟且，还有诗和远方的田野。 去上海野生动物园(携程买)，喜欢看BBC对于动物纪录片的记录。 找有意思的地方，逛逛街，拍照(周末)，陪她走过尘世的美好。 给对方写信(要真诚)，把真情融入文字中。 励志片(祝福她考研成功) 每天背单词(互相打卡)加油！ 坚定她考研信念，不放弃，给她鼓励。 最终目标 帮助她考上研究生，然后一起去台湾或者云南玩耍。","tags":[{"name":"小章鱼","slug":"小章鱼","permalink":"http://yoursite.com/tags/小章鱼/"},{"name":"paln","slug":"paln","permalink":"http://yoursite.com/tags/paln/"}]},{"title":"hexo 安装第一篇","date":"2017-01-12T15:23:41.000Z","path":"2017/01/12/creathexo/","text":"第一步安装 nodenode 第二步安装 gitgit 第三部安装 hexo$ npm install -g hexo-cli 第四步创建hexo文件夹‘hexo init’这里有一个坑的地方在于使用的使npm安装的初始theme的时候很慢，你耐心等待就好了 第五步安装hexo依赖npm install 第六步创建hexo文件夹所在目录执行hexo ghexo s可以在localhost：4000访问到页面这里有一个坑的地方是如果以上步骤都对的话，如果访问4000端口没有页面，那就你就是安装了福新阅读器，不要问我问什么知道执行hexo s -p 5000 本地的介绍到这里 参考链接hexo官网博客","tags":[{"name":"小章鱼","slug":"小章鱼","permalink":"http://yoursite.com/tags/小章鱼/"},{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"Markdown 学习笔记","date":"2017-01-12T07:14:01.000Z","path":"2017/01/12/start/","text":"段落第一段第二段第三段源代码 # 第一段 ## 第二段 ### 第三段 列表 苹果 香蕉 菠萝源代码123* 苹果* 香蕉* 菠萝 引用、斜体、加粗 天空没有鸟的痕迹，但我已飞过。 –泰戈尔源代码&gt; _天空没有**鸟**的痕迹，但我已飞过_。 --泰戈尔 代码块1234567891011121314ul &#123; margin: 0 0; padding: 0 0; list-style-type: none;&#125;li &#123; float: right; width: 80px; height: 40px; margin-right: 5%; margin-bottom: 10px; line-height: 40px; text-align: center;&#125; 源代码(css ul { margin: 0 0; padding: 0 0; list-style-type: none; } li { float: right; width: 80px; height: 40px; margin-right: 5%; margin-bottom: 10px; line-height: 40px; text-align: center; }) 分割线 源代码 - - - 链接i am 404i am baidu源代码 [i am 404](https://twitter.com/Tracy_xzh) [i am baidu](https://www.baidu.com) 参考链接链接","tags":[{"name":"测试","slug":"测试","permalink":"http://yoursite.com/tags/测试/"},{"name":"Markdown","slug":"Markdown","permalink":"http://yoursite.com/tags/Markdown/"}]},{"title":"测试页面","date":"2017-01-12T03:38:53.000Z","path":"2017/01/12/mynewpost/","text":"开始用markdown语法写文章内容","tags":[{"name":"测试","slug":"测试","permalink":"http://yoursite.com/tags/测试/"}]}]